from turtle import Turtle, Screen

timmy_the_turtle = Turtle()






screen = Screen()
screen.exitonclick()

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
timmy_the_turtle = Turtle()
timmy_the_turtle.shape("turtle")

# timmy_the_turtle.color("DodgerBlue4")
# timmy_the_turtle.forward(100)
# timmy_the_turtle.right(90)
# timmy_the_turtle.forward(100)
# timmy_the_turtle.right(90)
# timmy_the_turtle.forward(100)
# timmy_the_turtle.right(90)
# timmy_the_turtle.forward(100)
for _ in range(4):
    timmy_the_turtle.color("red")
    timmy_the_turtle.forward(200)
    timmy_the_turtle.right(90)


# timmy_the_turtle.forward(120)
# timmy_the_turtle.right(180)
# timmy_the_turtle.circle(360)


screen = Screen()
screen.exitonclick()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
timmy_the_turtle = Turtle()
timmy_the_turtle.shape("turtle")

for _ in range(32):
    timmy_the_turtle.color("red")
    timmy_the_turtle.forward(200)
    timmy_the_turtle.right(90)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Draw a Dashed Line
from turtle import Turtle, Screen

tim = Turtle()
 
for _ in range(25):
    tim.forward(5)
    tim.penup()
    tim.forward(15)
    tim.pendown()

screen = Screen()
screen.exitonclick()
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
from turtle import Turtle, Screen

tim = Turtle()
for _ in range(4):
    tim.color("red")
    tim.forward(50)
    tim.right(360 / 4)
for _ in range(5):
    tim.color("blue")
    tim.forward(50)
    tim.right(360/5)

for _ in range(6):
    tim.color("green")
    tim.forward(60)
    tim.right(360/6)

for _ in range(7):
    tim.color("purple")
    tim.forward(70)
    tim.right(360/7)

for _ in range(8):
    tim.color("black")
    tim.forward(80)
    tim.right(360/8)

screen = Screen()
screen.exitonclick()
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


from turtle import Turtle, Screen

tim = Turtle()
for _ in range(4):
    tim.color("red")
    tim.forward(50)
    tim.right(360 / 4)
for _ in range(5):
    tim.color("blue")
    tim.forward(50)
    tim.right(360/5)

for _ in range(6):
    tim.color("green")
    tim.forward(60)
    tim.right(360/6)

for _ in range(7):
    tim.color("purple")
    tim.forward(70)
    tim.right(360/7)

for _ in range(8):
    tim.color("black")
    tim.forward(80)
    tim.right(360/8)

screen = Screen()
screen.exitonclick()

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#drawing the shapes without function, which can only be drawn static with one shape at a time based on the value of mun_sides value
num_sides = 10
for _ in range(num_sides):
    angle = 360/num_sides
    tim.forward(100)
    tim.pensize(10)
    tim.color("green")
    tim.right(angle)
---------------------------------
#Usinga function to draw

from turtle import Turtle

tim = Turtle()


def draw_shape(num_shapes):
    angle = 360 / num_shapes
    for _ in range(num_shapes):
        tim.forward(100)
        tim.right(angle)


for shap_side_n in range(2, 11):
    draw_shape(shap_side_n)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

from turtle import Turtle
import random

tim = Turtle()

colors = ["dark blue", "navy", "black", "dark green", "crimson", "dark blue"]


def draw_shape(num_shapes):
    angle = 360 / num_shapes
    for _ in range(num_shapes):
        tim.forward(100)
        tim.right(angle)


for shape_side_n in range(2, 11,):
    tim.color(random.choice(colors))
    draw_shape(shape_side_n)
