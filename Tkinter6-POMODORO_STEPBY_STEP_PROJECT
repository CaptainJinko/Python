#Tkniter6-PROJECT
#Tkniter, Canvas widget and image to Tkinter

from tkinter import *

# ---------------------------- CONSTANTS ---------------------------------------------------------------------------------------------------------------------------------------#
PINK = "#e2979c"
RED = "#e7305b"
GREEN = "#9bdeac"
YELLOW = "#f7f5dd"
FONT_NAME = "Courier"
WORK_MIN = 25
SHORT_BREAK_MIN = 5
LONG_BREAK_MIN = 20

# ---------------------------- UI SETUP-----------------------------------------------------------------------------------------------------------------------------------------#

window = Tk()
window.title("POMODORO PROGRAME")
window.config(padx=100, pady=50, bg=YELLOW)

canvas = Canvas(width=200, height=224, bg= YELLOW , highlightthickness=0)
title_label = Label(text="Timer", fg=GREEN, bg=YELLOW, font=(FONT_NAME, 45, "bold"))
title_label.grid(column=1, row=0)

tomato_image = PhotoImage(file="tomato.png")
canvas.create_image(100, 112, image=tomato_image)
canvas.create_text(100, 130, text="00:00", fill="white", font=(FONT_NAME, 35, "bold"))
canvas.grid(column=1, row=1)

start_button = Button(text="Start", highlightthickness=0)
start_button.grid(column=0, row=2)

reset_button = Button(text="Start", highlightthickness=0)
reset_button.grid(column=2, row=2)

check_mark = Label(text="âœ”", )
check_mark.grid(column=1, row=3)
canvas.config()

window.mainloop()

*********************************************************************************************************************************************************************************
 [3a]
 #Cancel and reset the timer
 def reset_timer():
    window.after_cancel(timer)
    canvas.itemconfig(timer_text, text="00:00")
    title_label.config(text="Timer")
 *************************************
 [3b]

 

# ----------------------------TIMER RESET---------------------------------------------------------------------------------------------------------------------------------------#
#[2a]
def start_timer():
    count_down(5)
**********************
[2b]
def start_timer():
    global resp
    resp += 1
    work_sec = WORK_MIN * 1
    short_break = SHORT_BREAK_MIN * 60
    long_break = LONG_BREAK_MIN * 60
    if resp % 8 == 0:
        count_down(long_break)
    elif resp % 2 == 0:
        count_down(short_break)
    else:
        count_down(work_sec)

# -----------------------------TIMER MECHANISM-----------------------------------------------------------------------------------------------------------------------------------
[1] To update the counting in pomodora timer, or in the canvas, is by assigning the canvas where it write text by a variable called [timer = canvas.create_text.....]
#by calling the particular canvas like [canvas.itemconfig(timer_text, text=count)]
#The beginning of count down mechanism
def count_down(count):
     count_min= math.floor(cout/60)   
     count_sec = count % 60
    if count < 10:       # gives the format 0:0
       counbt_sec = f"0{count_sec}"   #gives the format 0:0  otherwise it will be only 0
    canvas.itemconfig(timer_text, text =f"{count_min}:{count_sec}")
    if count > 0:
       window.after(1000, count_down, count - 1)
    else:
        start_timer()
     

# ----------------------------------------------------------------------------COUNTDOWN MECHANISM-------------------------------------------------------------------------------#

#Changing a text in canvas is diffrent from label, 
#you have tap to particular canvas you want:Eg: canvas.itemconfig () in the methos you pass in the particular item 


