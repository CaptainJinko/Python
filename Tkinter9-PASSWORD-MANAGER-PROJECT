from tkinter import * 
#--------------------------------------Generate Password-------------------------------------------------------------------------------------------------------------------------#
# ---------------------------------------------------------------------------------SAVE PASSWORD --------------------------------------------------------------------------------#
window = Tk()
window.title("Password Manager")
window.config(padx=80, pady=50)
canvas = Canvas(height=200, width=200)

logo_image = PhotoImage(file="logo.png")
canvas.create_image(100, 100, image=logo_image)
canvas.grid(row=0, column=1)

website_label = Label(text=" website", font=("Arial", 12))
website_label.grid(row=1, column=0)

email_label = Label(text=" Email/Username: ", font=("Arial", 12))
email_label.grid(row=2, column=0, )

password_label = Label(text="Password:", font=("Arial", 12))
password_label.grid(row=3, column=0)

website_entry = Entry(width=46)
website_entry.grid(row=1, column=1, columnspan=2)
email_entry = Entry(width=46)
email_entry.grid(row=2, column=1, columnspan=2)

password_entry = Entry(width=31)
password_entry.grid(row=3, column=1)

generate_password_button =Button(text="Generate Pass")
generate_password_button.grid(row=3, column=2)

add_button = Button(text="Add", width=30)
add_button.grid(row=4, column=1, columnspan=3)

window.mainloop()
# ---------------------------- UI SETUP --------------------------------------------------------------------------------------------------------------------------------------- #

*********************************************************************************************************************************************************************************
#How to write all the data you entered into those fields 
def save():
    website = website_entry.get()
    email = email_entry.get()
    password = password_entry.get()

    with   open("Data.txt", "a") as data_file:
        data_file.write(f"{website}|{email}| {password}")
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#How to delete or clear what has been entered by add the last two line of codes 
    with   open("Data.txt", "a") as data_file:
        data_file.write(f"{website}|{email}| {password}")
        website_entry.delete(0, END)
        password_entry.delete(0, END)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#To add popup [standard dialog] message for confirmation before saving data, or canceling, check for more info in the docs of Tkinter

def save():
    website = website_entry.get()
    email = email_entry.get()
    password = password_entry.get()

    is_ok = messagebox.askokcancel(title=website, message=f"These are the details entered:\nEmail: {email}"
                                                          f"\nPassword: {password}\nIs it Ok to save?")
    if is_ok:
        with   open("Data.txt", "a") as data_file:
            data_file.write(f"{website}|{email}| {password}\n")
            website_entry.delete(0, END)
            password_entry.delete(0, END)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#To put a valaidation when a field is empty so that the user is remind to complete 
first option
[a]

    if len(website) == 0 or len(email) == 0 or len(password) == 0:
        messagebox.showinfo("Please don't leave any field empty")
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#second option
[b]
    if len(website) == 0 or len(email) == 0:
        messagebox.showinfo(title="Opps", message="Please make sure you haven't left any field empty")

    else:
            is_ok = messagebox.askokcancel(title=website, message=f"These are the details entered:\nEmail: {email}" f"\nPassword: {password}\nIs it Ok to save?")

            if is_ok:
                    with  open("Data.txt", "a") as data_file:
                        data_file.write(f"{website}|{email}| {password}\n")
                        website_entry.delete(0, END)
                        password_entry.delete(0, END)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Using list comprehension to achieve the same functinality before the function save() on top of it 
from tkinter import *
from tkinter import messagebox

import random

# ---------------------------------------------------------------------------PASSWORD GENERATOR ------------------------------------------------------------------------------- #
# Password Generator Projector

letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
           'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R',
           'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

nr_letters = random.randint(8, 10)
nr_symbols = random.randint(2, 4)
nr_numbers = random.randint(2, 4)

password_letters = [random.choice(letters) for _ in range(nr_letters)]
password_symbols = [random.choice(symbols) for _ in range(nr_symbols)]
password_numbers = [random.choice(numbers) for _ in range(nr_numbers)]

password_list = password_letters + password_symbols + password_numbers
random.shuffle(password_list)
password = ""
for char in password_list:
    password += char
#cut the code down further by first immporting

from random, import choice, randint, shuffle
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#can still cut t futher as 
password_list = password_letters + password_symbols + password_numbers
shuffle(password_list)

password = "".join(password_list)
print(f"Your password is {password}")
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#We can embed this in a function and call it in the generate button 
 
def generate_password():
    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
               'v',
               'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
               'R',
               'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

    password_letters = [choice(letters) for _ in range(randint(8, 10))]
    password_symbols = [choice(symbols) for _ in range(randint(2, 4))]
    password_numbers = [choice(numbers) for _ in range(randint(2, 4))]

    password_list = password_letters + password_symbols + password_numbers
    shuffle(password_list)

    password = "".join(password_list)
    print(f"Your password is {password}")

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#This line of code will populate the paaword into the Entry box
    password = "".join(password_list)
    password_entry.insert(0, password)


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#The ability to put string into/onto the clipboard. By using python project called perclip
#so easy to use in cpying and pasting

https://pypi.org/project/pyperclip/
    #password: str = "".join(password_list)
    #password_entry.insert(0, password)
    pyperclip.copy(password)

*********************************************************************************************************************************************************************************
from tkinter import *
from tkinter import messagebox
from random import choice, randint, shuffle
import pyperclip

# ---------------------------- PASSWORD GENERATOR ------------------------------- #
# Password Generator Projector
def generate_password():
    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
               'v',
               'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
               'R',
               'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

    password_letters = [choice(letters) for _ in range(randint(8, 10))]
    password_symbols = [choice(symbols) for _ in range(randint(2, 4))]
    password_numbers = [choice(numbers) for _ in range(randint(2, 4))]

    password_list = password_letters + password_symbols + password_numbers
    shuffle(password_list)

    password: str = "".join(password_list)
    password_entry.insert(0, password)
    pyperclip.copy(password)

def save():
    website = website_entry.get()
    email = email_entry.get()
    password = password_entry.get()

    if len(website) == 0 or len(email) == 0 or len(password) == 0:
        messagebox.showinfo(title="Opps", message="Please make sure you haven't left any field empty")

    else:
        is_ok = messagebox.askokcancel(title=website,
                                       message=f"These are the details entered:\nEmail: {email}" f"\nPassword: {password}\nIs it Ok to save?")

        if is_ok:
            with  open("Data.txt", "a") as data_file:
                data_file.write(f"{website}|{email}| {password}\n")
                website_entry.delete(0, END)
                password_entry.delete(0, END)


# ---------------------------- --------------------------------------------------------SAVE PASSWORD ------------------------------------------------------------------------- #
 #How to update the data entered not overwrite it, not appeding but but update data being added to the preexisting list

def save():
    website = website_entry.get()
    email = email_entry.get()
    password = password_entry.get()
    new_data = {
        website: {
            "email": email,
            "password": password,
        }
    }

    if len(website) == 0 or len(email) == 0 or len(password) == 0:
        messagebox.showinfo(title="Opps", message="Please make sure you haven't left any field empty")

    else:
        with  open("data.json", "r") as data_file:
            # Reading old data
            data = json.load(data_file)
            # updating old data with new data
            data.update(new_data)

        with open("data.json", "w") as data_file:
            # Saving updated data
            json.dump(data, data_file, indent=4)

            website_entry.delete(0, END)
            password_entry.delete(0, END)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Error Handling 
#Open a file  with the load method  [with open("data.json", "r")] update file with update methods like this [with open("data.json", "w")] we save 
# Save it with dump() method. Now if there is no file, or exixting file to open, our program will crash. Because if has no file to open and upadte and then save
#So the error handling methods comes in handy

def save():
    website = website_entry.get()
    email = email_entry.get()
    password = password_entry.get()
    new_data = {
        website: {
            "email": email,
            "password": password,
        }
    }

    if len(website) == 0 or len(email) == 0 or len(password) == 0:
        messagebox.showinfo(title="Opps", message="Please make sure you haven't left any field empty")

    else:
        try:
            with  open("data.json", "r") as data_file:
                # Reading old data
                data = json.load(data_file)
        except FileNotFoundError:
            with open("data.json", "w") as data_file:
                json.dump(new_data, data_file, indent=4)
        else:

            # updating old data with new data
            data.update(new_data)

            with open("data.json", "w") as data_file:
                # Saving updated data
                json.dump(data, data_file, indent=4)
        finally:
            website_entry.delete(0, END)
            password_entry.delete(0, END)
