#https://www.crummy.com/software/BeautifulSoup/bs4/doc/

print(soup.prettify()) function or property will indent your code properly 
print(soup.a)    will give the first anchor tag
print(soup.p)     will give us the firts paragraph
print(soup.li) will give the first list 


soup= BeautifulSoup(contents, "html.parser")
# print(soup.title)
# print(soup.title.string)
# print(soup.prettify())
# print(soup.a)
# print(soup.p)
# print(soup.ul)
All_anchor_tags=soup.findAll(name="a")
 # print(All_anchor_tags)

for tag in All_anchor_tags:
    # print(tag.getText())

    print(tag.get("href"))

heading_section=soup.find(name="h3", class_="heading") #Because we have class as a keyword, use class_ 
print(heading_section)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# with open("website.html") as file:
#     contents = file.read()
# soup= BeautifulSoup(contents, "html.parser")
# print(soup.title)
# print(soup.title.string)
# print(soup.prettify())
# print(soup.a)
# print(soup.p)
# print(soup.ul)
# All_anchor_tags=soup.findAll(name="a")
# print(All_anchor_tags)
#
# for tag in All_anchor_tags:
#     # print(tag.getText())
#
#     print(tag.get("href"))

# heading= soup.find(name="h1", id="name")
# print(heading)

# heading_section=soup.find(name="h3", class_="heading")
# print(heading_section)
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# All_anchor_tag=soup.findAll(name="a")
# # print(All_anchor_tag)
# for tag in All_anchor_tag:
#     get_href=tag.get("href")
#     print(get_href)
# company_url=soup.select_one(selector="p a")
# print(company_url)

# myNname=soup.select_one("#name")
# print(myNname)
# heading=soup.select(selector=".heading")
# 
https://www.crummy.com/software/BeautifulSoup/bs4/doc/
to selet a tag from something like this :  <p><em> Founder of <strong> <a href="https://southerneuropetrading.com/">The Southern Europe</a></strong>.</em></p>

company_url=soup.select_one(selector="p a")
print(company_url)

https://news.ycombinator.com/

https://www.aps.org/publications/apsnews/updates/feynman.cfm

https://news.ycombinator.com/news

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
from bs4 import BeautifulSoup
import requests
response=requests.get("https://news.ycombinator.com/news")
yc_web_page= response.text

soup=BeautifulSoup(yc_web_page, "html.parser")
article_tag= soup.find(name="a", class_="storylink")
print(article_tag.getText)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <title>The Dormouse's Story </title>
</head>
<p class="story">Once upon a time there were three little sisters; and their names were
<a href="http://example.com/elsie" class="siser" id="link1">Elsie</a>
<a href="http://example.com/lacie" class="sister" id="link2">Lacie</a> and
<a href="http://example.com/tillie" class="sister" id="link3">Tillie</a>;
and they live at the bottom of well</p>
<p class="story">...</p>
"""
<body>

</body>
</html>

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
from bs4 import BeautifulSoup

with open("QuickStart.html") as file:
    contents=file.read()
    print(contents)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

soup= BeautifulSoup(contents, "html.parser")
# print(soup.prettify())
# print(soup.find_all("a"))
#print(soup.find(id="link3"))

#One common task is extracting all the URLs found within a pageâ€™s <a> tags:
for link in soup.find_all("a"):
    print(link.get("href"))

http://example.com/elsie
http://example.com/lacie
http://example.com/tillie
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Another common task is extracting all the text from a page:



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

from bs4 import BeautifulSoup
import requests

response = requests.get("https://news.ycombinator.com/news")
yc_page = response.text
 
soup = BeautifulSoup(yc_page, "html.parser")
articles = soup.find_all(name="a", class_="storylink")

article_text = []
article_links = []
for articles_tag in articles:
    text = articles_tag.getText()
    article_text.append(text)
    link = articles_tag.getText("href")
    article_links.append(link)

article_upvote = [score.getText() for score in soup.find_all(name="span", class_="score")]

print(article_text)
print(article_links)
print(article_upvote)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#We want the item and also  split the number 
# print(article_text)
# print(article_links)
print(article_upvote[0].split())
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#print(int(article_upvote[0].split()[0]))

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
article_upvote = [int(score.getText().split()[0])for score in soup.find_all(name="span", class_ ="score")]

print(article_text)
print(article_links)
print(article_upvote)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#we can sort the number and get the number with highest value


article_upvote = [int(score.getText().split()[0])for score in soup.find_all(name="span", class_ ="score")]

print(article_text)
print(article_links)
print(article_upvote)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



