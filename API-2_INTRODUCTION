#http://api.open-notify.org/iss-now.json
#one of the most important aspects of an API is the API endpoint.
#And you can imagine that as a location, right
---------------------
import requests
response = requests.get(url="http://api.open-notify.org/iss-now.json")
print(response)
-----------------------------------------------
#if you wanted to know the actual status code instead of just a response object,
#then you can say response.status_code,
#and you actually only get the status code. But notice how
#if I change this URL and I make a typo in here,
 
import requests
response = requests.get(url="http://api.open-notify.org/iss-now.json")
print(response.status_code)

--------------------------------------------------------------------------
Basically instead of us trying to raise an exception for every single possible
status code and telling the developer what might be the reason, we can simply use
the request module by saying response.raise_for_status.

import requests
response = requests.get(url="http://api.open-notify.org/iss-now.json")
response.raise_for_status()

--------------------------------------
#But for now, the first thing we need to get hold of is the actual data from this
#particular API. To do that,
#we tap into our response and we get the JSON data.
#So this is the actual data. And when I print it,

import requests
response = requests.get(url="http://api.open-notify.org/iss-now.json")
response.raise_for_status()
data = response.json()
print(data)
------------------------------------------------------------------------------------
we can tap into it just like we would for any Python dictionary.
We could use some square brackets and then type in the name of a key that we're
interested in. For example,
if this was a Python dictionary and we wanted to know the iss_position,
then we would add the square brackets and then pass in iss_ position.

import requests
response = requests.get(url="http://api.open-notify.org/iss-now.json")
response.raise_for_status()
data = response.json()["iss_position"]["longitude"]
print(data)
[2]
--------------------------------------------------
import requests
response = requests.get(url="http://api.open-notify.org/iss-now.json")
response.raise_for_status()
data = response.json()
longitude=data["iss_position"]["longitude"]
latitude=data["iss_position"]["latitude"]
iss_position=(longitude, latitude)
print(iss_position)

***********************************************************************
#Project Kanye Quote

from tkinter import *
import requests


def get_quote():
    response = requests.get("https://api.kanye.rest")
    response.raise_for_status()
    data = response.json()
    kenye_qoute = data["quote"]
    canvas.itemconfig(quote_text, text=kenye_qoute)


window = Tk()
window.title("Kanye Says...")
window.config(padx=50, pady=50)

canvas = Canvas(width=300, height=414)
background_img = PhotoImage(file="background.png")
canvas.create_image(150, 207, image=background_img)
quote_text = canvas.create_text(150, 207, text="Kanye Quote Goes HERE", width=250, font=("Arial", 20, "bold"),
                                fill="black")
canvas.grid(row=0, column=0)

kanye_img = PhotoImage(file="kanye.png")
kanye_button = Button(image=kanye_img, highlightthickness=0, command=get_quote)
kanye_button.grid(row=1, column=0)

window.mainloop()

--------------------------------------------------------
Let's create a set of parameters and you can do this by simply creating a Python
dictionary.
Now the keys for the parameters must match the ones specified in the API
documentation.
So it's lat for latitude and lng for longitude.
So let's create those keys as strings,
and then we can provide our latitude and longitude.
-----------------------------------------------------------------
import requests
from datetime import datetime

MY_LAT = 51.917900
MY_LONG = 4.400250
MY_TIME=0

parameters = {
    "lat": MY_LAT,
    "lng": MY_LONG,
    "formatted": 0  #Turn off from 12hrs to 24hrs time    

}
response = requests.get("https://api.sunrise-sunset.org/json", params=parameters )
response.raise_for_status()
data = response.json()
sunrise = data["results"]["sunrise"]
sunset = data["results"]["sunset"]
print(sunrise)

time_now = datetime.now()

------------------------------------------------------------------------------
#we have 2021-04-08T04:59:18+00:00 as time how can we seperate the T?
print(sunrise.split("T")) above
-----------------------------------------------------------------------
response = requests.get("https://api.sunrise-sunset.org/json", params=parameters )
response.raise_for_status()
data = response.json()
sunrise = data["results"]["sunrise"]
sunset = data["results"]["sunset"]
print(sunrise)
print(sunrise.split("T")[1].split(":")[0])

time_now = datetime.now()
-------------------------------------------------------------------------------
sunrise = data["results"]["sunrise"].split("T")[1].split(":")[0]
sunset = data["results"]["sunset"].split("T")[1].split(":")[0]

print(sunrise)
print(sunset )

time_now = datetime.now()
print(time_now.hour)
