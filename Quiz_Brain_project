#creating the class and its attributes

question_model.py

class Question:

    def __init__(self, q_text, q_answer):
        self.text = q_text
        self.answer = q_answer

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

main.py
from question_model import Question
from data import question_data

question_bank = []
for question in question_data:
    question_text = question["text"]
    question_answer = question["answer"]
    new_question = Question(question_text, question_answer)
    question_bank.append(new_question)
---------------------------------------------------------------
main.py Saage two
from question_model import Question
from data import question_data
from quiz_brain import QuizBrain

question_bank = []
for question in question_data:
    question_text = question["text"]
    question_answer = question["answer"]
    new_question = Question(question_text, question_answer)
    question_bank.append(new_question)

quiz = QuizBrain(question_bank)
quiz.next_question()

while quiz.still_has_question():
    quiz.next_question()
--------------------------------------------------------------------
#stage three
main.py

print("You have completed the Quiz")
print(f"Your final score was: {quiz.score}/{quiz.question_number}")

------------------------------------------------------------------
main.py
from question_model import Question
from data import question_data
from quiz_brain import QuizBrain

question_bank = []
for question in question_data:
    question_text = question["text"]
    question_answer = question["answer"]
    new_question = Question(question_text, question_answer)
    question_bank.append(new_question)

quiz = QuizBrain(question_bank)
quiz.next_question()

------------------------------------------------------------------
#Stage one
quiz_brain.py

class QuizBrain:

    def __init__(self, q_list):
        self.question_number = 0
        self.question_list = q_list


Stace Barreiro de Leon
        def next_question(self):
            current_question = self.question_list[self.question_number]
------------------------------------------------------------------------
#stage two
quiz_brain.py
class QuizBrain:

    def __init__(self, q_list):
        self.question_number = 0
        self.question_list = q_list

    def next_question(self):
        current_question = self.question_list[self.question_number]
        input(f"Q.{self.question_number}:{current_question.text}(True/False) ")
-------------------------------------------------------------------------------------------------------
#stage Three
class QuizBrain:

    def __init__(self, q_list):
        self.question_number = 0
        self.question_list = q_list

    def next_question(self):
        current_question = self.question_list[self.question_number]
        self.question_number += 1
        input(f"Q.{self.question_number}:{current_question.text}(True/False) ")
----------------------------------------------------------------------------------------------------
#QuizBrain complete stage 
quiz_brain.py

class QuizBrain:

    def __init__(self, q_list):
        self.question_number = 0
        self.score = 0
        self.question_list = q_list

    def still_has_question(self):
        return self.question_number < len(self.question_list)

    def next_question(self):
        current_question = self.question_list[self.question_number]
        self.question_number += 1
        user_answer = input(f"Q.{self.question_number}:{current_question.text}(True/False) ")
        self.check_answer(user_answer, current_question.answer)

    def check_answer(self, user_answer, correct_answer):

        if user_answer.lower() == correct_answer.lower():
            self.score += 1
            print("You got it right")
        else:
            print("You got it wrong")

        print(f"The correct answer was {correct_answer} ")
        print(f"Your current score {self.score}/{self.question_number}")
        print("\n")



----------------------------------------------------------------------------------------------------
#QuizBrain stage two 

class QuizBrain:

    def __init__(self, q_list):
        self.question_number = 0
        self.question_list = q_list

    def still_has_question(self):
        return self.question_number < len(self.question_list)

    def next_question(self):
        current_question = self.question_list[self.question_number]
        self.question_number += 1
        input(f"Q.{self.question_number}:{current_question.text}(True/False) ")

--------------------------------------------------------------------------------------
#https://opentdb.com/api_config.php      (where to generate youe question )  

#Go and copy or download the data.py file and name question_data[{}]      
