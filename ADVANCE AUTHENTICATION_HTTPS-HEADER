Advanced Authentication 

#header and we're also going to be learning how to make POST, PUT and DELETE requests
#Now there's also four other common types of requests that we should probably know about; post put and delete.
Well, the first thing is the URL endpoint
[A] work on this site [https://pixe.la/]

import requests

pixela_endpoint = "https://pixe.la/v1/users"
TOKEN = "eliasadamjinkozamqras321#"
user_params = {
    "token": TOKEN,
    "username": "jinko",
    "agreeTermsOfService": "yes",
    "notMinor": "yes",

}

response=requests.post(url=pixela_endpoint, json=user_params)
print(response.text)


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
And this is going to be comprised of the Pixela endpoint

and then in addition, it's going to be / our username.

So let's take out our username and our token and put it as a constant at the top.
Right Now we can add that in here using an f-string and then finally it's /graphs.
Now, remember if you're doing this along with me, this username is going to have to be your own unique username and the token is
going to be your own secret token. Once we've created our graph end point, the next step is to make our post request

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Creating a graph and using more secure methods on auhentcation

graph_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs"

graph_config = {
    "id": "graph1",
    "name": "Programming Graph",
    "unit": "Lesson",
    "type": "int",
    "color": "momiji",
}

headers={
    "X-USER-TOKEN": TOKEN
}
response = requests.post(url=graph_endpoint, json=graph_config, headers=headers)
print(response.text)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
our URL is going to be this new pixel creation endpoint.Our JSON that we're going to pass over is our pixel_data,
and finally,we're going to reuse the headers that we had from previously,
because it still contains the same token that we need to authenticate ourselves.So let's see what is the response that we get back.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
pixel_creation_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}"

pixel_data = {
    "date": "20200724",
    "quantity": "4"

}
response = requests.post(url=pixel_creation_endpoint, json=pixel_data, headers=headers)
print(response)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#How to get the date automated 
oday = datetime(year=2021, month=4, day=18)
print(today)
pixel_data = {
    "date": today.strftime("%Y%m%d"),
    "quantity": "9"

}
response = requests.post(url=pixel_creation_endpoint, json=pixel_data, headers=headers)
print(response.text)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ow to update 
update_endpoint=f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}/{today.strftime('%Y%m%d')}"

response =requests.post(url=pixela_endpoint, json=pixel_data, headers=headers)

new_pixel={
    "quantity": "2"
}

response= requests.post(url=update_endpoint, json=new_pixel, headers=headers)
print(response.text)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#How to delete
delete_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}/{today.strftime('%Y%m%d')}"

response = requests.delete(url=delete_endpoint, headers=headers)
print(response.text)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#The complete solution
import requests
from datetime import datetime

USERNAME = "eliasjinko"
TOKEN = "eliasadamjinkozamqras321#"
pixela_endpoint = "https://pixe.la/v1/users"
GRAPH_ID = "graph3119"

user_params = {
    "token": TOKEN,
    "username": USERNAME,
    "agreeTermsOfService": "yes",
    "notMinor": "yes",

}

response = requests.post(url=pixela_endpoint, json=user_params)
# print(response.text)

graph_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs"

graph_config = {
    "id": GRAPH_ID,
    "name": "Python Programming Graph",
    "unit": "Lesson",
    "type": "int",
    "color": "shibafu",
}

headers = {
    "X-USER-TOKEN": TOKEN
}

response = requests.post(url=graph_endpoint, json=graph_config, headers=headers)
# print(response.text)

pixel_creation_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}"

today = datetime.now()
print(today)
pixel_data = {
    "date": today.strftime("%Y%m%d"),

    "quantity": input ("How many python project have done today?")

}
# response = requests.post(url=pixel_creation_endpoint, json=pixel_data, headers=headers)
# print(response.text)

update_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}/{today.strftime('%Y%m%d')}"

response = requests.post(url=pixela_endpoint, json=pixel_data, headers=headers)

new_pixel = {
    "quantity": "2"
}

response= requests.post(url=update_endpoint, json=new_pixel, headers=headers)
print(response.text)

delete_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}/{today.strftime('%Y%m%d')}"

# response = requests.delete(url=delete_endpoint, headers=headers)
# print(response.text)





